<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/teamflux/fluxai/model/Models.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/teamflux/fluxai/model/Models.kt" />
              <option name="originalContent" value="package com.teamflux.fluxai.model&#10;&#10;import java.util.Date&#10;&#10;// --- USER AUTH ---&#10;data class Admin(&#10;    val adminId: String,&#10;    val username: String,&#10;    val email: String,&#10;    val phone: String,&#10;)&#10;&#10;// --- TEAM ---&#10;data class Team(&#10;    val teamId: String = &quot;&quot;,&#10;    val teamName: String = &quot;&quot;,&#10;    val createdBy: String = &quot;&quot;, // adminId&#10;    val createdAt: Date = Date()&#10;)&#10;&#10;data class TeamMember(&#10;    val userId: String = &quot;&quot;,&#10;    val teamId: String = &quot;&quot;, // belongs to what team&#10;    val username: String = &quot;&quot;,&#10;    val role: String = &quot;&quot;, // frontend | backend etc..&#10;    val email: String = &quot;&quot;,&#10;    val phone: String = &quot;&quot;,&#10;)&#10;&#10;// --- ATTENDANCE ---&#10;data class Attendance(&#10;    val attendanceId: String,&#10;    val userId: String,&#10;    val date: Date,&#10;    val status: String // &quot;present&quot;, &quot;absent&quot;, &quot;late&quot;&#10;)&#10;&#10;// --- PERFORMANCE ---&#10;data class Performance(&#10;    val performanceId: String,&#10;    val userId: String,&#10;    val teamId: String, // for team performance&#10;    val commits: Int,&#10;    val performanceScore: Float,&#10;    val startDate: Date,&#10;    val endDate: Date&#10;)&#10;&#10;// --- UI MODELS FOR DASHBOARD ---&#10;data class EmployeePerformance(&#10;    val id: String,&#10;    val name: String,&#10;    val role: String,&#10;    val githubUsername: String,&#10;    val commitsThisWeek: Int,&#10;    val commitsLastWeek: Int,&#10;    val linesOfCode: Int,&#10;    val tasksCompleted: Int,&#10;    val totalTasks: Int,&#10;    val attendanceRate: Double,&#10;    val codeQualityScore: Double,&#10;    val collaborationScore: Double,&#10;    val productivityScore: Double,&#10;    val commitHistory: List&lt;Int&gt;, // Last 7 days commit count&#10;    val aiEvaluation: AIEvaluation&#10;)&#10;&#10;data class AIEvaluation(&#10;    val overallRating: String,&#10;    val strengths: List&lt;String&gt;,&#10;    val improvements: List&lt;String&gt;,&#10;    val recommendation: String,&#10;    val performanceTrend: String&#10;)&#10;&#10;// --- CHAT MODELS ---&#10;data class ChatMessage(&#10;    val text: String,&#10;    val isUser: Boolean,&#10;    val timestamp: Long = System.currentTimeMillis()&#10;)&#10;&#10;// --- USER PROFILE (for Settings) ---&#10;data class UserProfile(&#10;    val displayName: String? = null,&#10;    val email: String? = null,&#10;    val phone: String? = null,&#10;    val githubUsername: String? = null,&#10;    val githubProfileUrl: String? = null,&#10;    val avatarUrl: String? = null&#10;)&#10;" />
              <option name="updatedContent" value="package com.teamflux.fluxai.model&#13;&#10;&#13;&#10;import java.util.Date&#13;&#10;&#13;&#10;// --- USER AUTH ---&#13;&#10;data class Admin(&#13;&#10;    val adminId: String,&#13;&#10;    val username: String,&#13;&#10;    val email: String,&#13;&#10;    val phone: String,&#13;&#10;)&#13;&#10;&#13;&#10;// --- TEAM ---&#13;&#10;data class Team(&#13;&#10;    val teamId: String = &quot;&quot;,&#13;&#10;    val teamName: String = &quot;&quot;,&#13;&#10;    val createdBy: String = &quot;&quot;, // adminId&#13;&#10;    val createdAt: Date = Date()&#13;&#10;)&#13;&#10;&#13;&#10;data class TeamMember(&#13;&#10;    val userId: String = &quot;&quot;,&#13;&#10;    val teamId: String = &quot;&quot;, // belongs to what team&#13;&#10;    val username: String = &quot;&quot;,&#13;&#10;    val role: String = &quot;&quot;, // frontend | backend etc..&#13;&#10;    val email: String = &quot;&quot;,&#13;&#10;    val phone: String = &quot;&quot;,&#13;&#10;)&#13;&#10;&#13;&#10;// --- ATTENDANCE ---&#13;&#10;data class Attendance(&#13;&#10;    val attendanceId: String,&#13;&#10;    val userId: String,&#13;&#10;    val date: Date,&#13;&#10;    val status: String // &quot;present&quot;, &quot;absent&quot;, &quot;late&quot;&#13;&#10;)&#13;&#10;&#13;&#10;// --- PERFORMANCE ---&#13;&#10;data class Performance(&#13;&#10;    val performanceId: String,&#13;&#10;    val userId: String,&#13;&#10;    val teamId: String, // for team performance&#13;&#10;    val commits: Int,&#13;&#10;    val performanceScore: Float,&#13;&#10;    val startDate: Date,&#13;&#10;    val endDate: Date&#13;&#10;)&#13;&#10;&#13;&#10;// --- UI MODELS FOR DASHBOARD ---&#13;&#10;data class EmployeePerformance(&#13;&#10;    val id: String,&#13;&#10;    val name: String,&#13;&#10;    val role: String,&#13;&#10;    val githubUsername: String,&#13;&#10;    val commitsThisWeek: Int,&#13;&#10;    val commitsLastWeek: Int,&#13;&#10;    val linesOfCode: Int,&#13;&#10;    val tasksCompleted: Int,&#13;&#10;    val totalTasks: Int,&#13;&#10;    val attendanceRate: Double,&#13;&#10;    val codeQualityScore: Double,&#13;&#10;    val collaborationScore: Double,&#13;&#10;    val productivityScore: Double,&#13;&#10;    val commitHistory: List&lt;Int&gt;, // Last 7 days commit count&#13;&#10;    val aiEvaluation: AIEvaluation&#13;&#10;)&#13;&#10;&#13;&#10;data class AIEvaluation(&#13;&#10;    val overallRating: String,&#13;&#10;    val strengths: List&lt;String&gt;,&#13;&#10;    val improvements: List&lt;String&gt;,&#13;&#10;    val recommendation: String,&#13;&#10;    val performanceTrend: String&#13;&#10;)&#13;&#10;&#13;&#10;// --- CHAT MODELS ---&#13;&#10;data class ChatMessage(&#13;&#10;    val text: String,&#13;&#10;    val isUser: Boolean,&#13;&#10;    val timestamp: Long = System.currentTimeMillis()&#13;&#10;)&#13;&#10;&#13;&#10;// --- USER PROFILE (for Settings) ---&#13;&#10;data class UserProfile(&#13;&#10;    val displayName: String? = null,&#13;&#10;    val email: String? = null,&#13;&#10;    val phone: String? = null,&#13;&#10;    val githubUsername: String? = null,&#13;&#10;    val githubProfileUrl: String? = null,&#13;&#10;    val avatarUrl: String? = null&#13;&#10;)" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>